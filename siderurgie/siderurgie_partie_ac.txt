-- Bloc acierie :
------------------

-- Permet de transformer la fonte et le melange pour acier en lingot d'acier : doit etre alimenté par une source de gaz provenant d'un haut fourneau via des tuyaux

--Declaration du bloc acierie :

minetest.register_node("siderurgie:ac", {
	description = "bloc Acierie",
	tiles = {"ac_off.png"},
	paramtype2 = "facedir",
	light_source = 8,
	--drop = "default:furnace",
	--groups = {cracky=2},
	walkable = true,
	pointable = true,
	diggable = false,
	is_ground_content = false,
	legacy_facedir_simple = true,
	
})

minetest.register_node("siderurgie:ac_on", {
	description = "bloc Acierie",
	tiles = {"ac_on.png"},
	paramtype2 = "facedir",
	light_source = 8,
	--drop = "default:furnace",
	--groups = {cracky=2},
	walkable = true,
	pointable = true,
	diggable = false,
	is_ground_content = false,
	legacy_facedir_simple = true,
	
})

-- Gestion : si alimenté en gaz par un tuyaux horizontal alors le bloc fonctionne :

minetest.register_abm({
nodenames = {"siderurgie:ac"},
	interval = 1,
	chance = 1,
	action = function(pos, node, active_object_count, active_object_count_wider)
		local fuelpos1={x=pos.x, y=pos.y+1, z=pos.z}
		local fuelpos2={x=pos.x, y=pos.y-1, z=pos.z}
		local fuelpos3={x=pos.x+1, y=pos.y, z=pos.z}
		local fuelpos4={x=pos.x-1, y=pos.y, z=pos.z}
		local fuelpos5={x=pos.x, y=pos.y, z=pos.z+1}
		local fuelpos6={x=pos.x, y=pos.y, z=pos.z-1}
		if minetest.env:get_node(fuelpos1).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos2).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos3).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos4).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos5).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos6).name=="siderurgie:tuyau_h_on" then
			--minetest.env:remove_node(pos)
			minetest.env:add_node(pos, {name="siderurgie:ac_on"})
			nodeupdate(pos)
			
		end
	end,
})

minetest.register_abm({
nodenames = {"siderurgie:ac_on"},
	interval = 1,
	chance = 1,
	action = function(pos, node, active_object_count, active_object_count_wider)
		local fuelpos1={x=pos.x, y=pos.y+1, z=pos.z}
		local fuelpos2={x=pos.x, y=pos.y-1, z=pos.z}
		local fuelpos3={x=pos.x+1, y=pos.y, z=pos.z}
		local fuelpos4={x=pos.x-1, y=pos.y, z=pos.z}
		local fuelpos5={x=pos.x, y=pos.y, z=pos.z+1}
		local fuelpos6={x=pos.x, y=pos.y, z=pos.z-1}
		if minetest.env:get_node(fuelpos1).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos2).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos3).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos4).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos5).name=="siderurgie:tuyau_h_on" or minetest.env:get_node(fuelpos6).name=="siderurgie:tuyau_h_on" then
			--minetest.env:remove_node(pos)
			minetest.env:add_node(pos, {name="siderurgie:ac"})
			nodeupdate(pos)
			
		end
	end,
})

--Gestion : si alimenté en gaz par un tuyaux vertical alors le bloc fonctionne :

minetest.register_abm({
nodenames = {"siderurgie:ac"},
	interval = 1,
	chance = 1,
	action = function(pos, node, active_object_count, active_object_count_wider)
		local fuelpos1={x=pos.x, y=pos.y+1, z=pos.z}
		local fuelpos2={x=pos.x, y=pos.y-1, z=pos.z}
		local fuelpos3={x=pos.x+1, y=pos.y, z=pos.z}
		local fuelpos4={x=pos.x-1, y=pos.y, z=pos.z}
		local fuelpos5={x=pos.x, y=pos.y, z=pos.z+1}
		local fuelpos6={x=pos.x, y=pos.y, z=pos.z-1}
		if minetest.env:get_node(fuelpos1).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos2).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos3).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos4).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos5).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos6).name=="siderurgie:tuyau_v_on" then
			--minetest.env:remove_node(pos)
			minetest.env:add_node(pos, {name="siderurgie:ac_on"})
			nodeupdate(pos)
			
		end
	end,
})

minetest.register_abm({
nodenames = {"siderurgie:ac_on"},
	interval = 1,
	chance = 1,
	action = function(pos, node, active_object_count, active_object_count_wider)
		local fuelpos1={x=pos.x, y=pos.y+1, z=pos.z}
		local fuelpos2={x=pos.x, y=pos.y-1, z=pos.z}
		local fuelpos3={x=pos.x+1, y=pos.y, z=pos.z}
		local fuelpos4={x=pos.x-1, y=pos.y, z=pos.z}
		local fuelpos5={x=pos.x, y=pos.y, z=pos.z+1}
		local fuelpos6={x=pos.x, y=pos.y, z=pos.z-1}
		if minetest.env:get_node(fuelpos1).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos2).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos3).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos4).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos5).name=="siderurgie:tuyau_v_on" or minetest.env:get_node(fuelpos6).name=="siderurgie:tuyau_v_on" then
			--minetest.env:remove_node(pos)
			minetest.env:add_node(pos, {name="siderurgie:ac"})
			nodeupdate(pos)
			
		end
	end,
})

-- Crée de l'acier si le joueur a dans son inventaire 1 seau de fonte et 4 melange pour acier

minetest.register_on_punchnode(function(p, node, player)
	if node.name=="siderurgie:ac_on" and player:get_inventory():contains_item('main', 'siderurgie:fonte') and player:get_inventory():contains_item('main', 'siderurgie:melange 4') then
		player:get_inventory():add_item('main', "default:steel_ingot")
		player:get_inventory():remove_item('main', 'siderurgie:melange 4')
		player:get_inventory():remove_item('main', 'siderurgie:fonte')
	end

end)
